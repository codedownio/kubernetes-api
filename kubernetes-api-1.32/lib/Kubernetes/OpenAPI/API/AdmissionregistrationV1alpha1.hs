{-
   Kubernetes

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   Kubernetes API version: release-1.32
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Kubernetes.OpenAPI.API.AdmissionregistrationV1alpha1
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Kubernetes.OpenAPI.API.AdmissionregistrationV1alpha1 where

import Kubernetes.OpenAPI.Core
import Kubernetes.OpenAPI.MimeTypes
import Kubernetes.OpenAPI.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** AdmissionregistrationV1alpha1

-- *** createMutatingAdmissionPolicy

-- | @POST \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies@
-- 
-- create a MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createMutatingAdmissionPolicy
  :: (Consumes CreateMutatingAdmissionPolicy contentType, MimeRender contentType V1alpha1MutatingAdmissionPolicy)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1alpha1MutatingAdmissionPolicy -- ^ "body"
  -> KubernetesRequest CreateMutatingAdmissionPolicy contentType V1alpha1MutatingAdmissionPolicy accept
createMutatingAdmissionPolicy _  _ body =
  _mkRequest "POST" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateMutatingAdmissionPolicy 
instance HasBodyParam CreateMutatingAdmissionPolicy V1alpha1MutatingAdmissionPolicy 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam CreateMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam CreateMutatingAdmissionPolicy DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam CreateMutatingAdmissionPolicy FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam CreateMutatingAdmissionPolicy FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes CreateMutatingAdmissionPolicy mtype

-- | @application/json@
instance Produces CreateMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces CreateMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces CreateMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces CreateMutatingAdmissionPolicy MimeYaml


-- *** createMutatingAdmissionPolicyBinding

-- | @POST \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings@
-- 
-- create a MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
createMutatingAdmissionPolicyBinding
  :: (Consumes CreateMutatingAdmissionPolicyBinding contentType, MimeRender contentType V1alpha1MutatingAdmissionPolicyBinding)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1alpha1MutatingAdmissionPolicyBinding -- ^ "body"
  -> KubernetesRequest CreateMutatingAdmissionPolicyBinding contentType V1alpha1MutatingAdmissionPolicyBinding accept
createMutatingAdmissionPolicyBinding _  _ body =
  _mkRequest "POST" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data CreateMutatingAdmissionPolicyBinding 
instance HasBodyParam CreateMutatingAdmissionPolicyBinding V1alpha1MutatingAdmissionPolicyBinding 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam CreateMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam CreateMutatingAdmissionPolicyBinding DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam CreateMutatingAdmissionPolicyBinding FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam CreateMutatingAdmissionPolicyBinding FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes CreateMutatingAdmissionPolicyBinding mtype

-- | @application/json@
instance Produces CreateMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces CreateMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces CreateMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces CreateMutatingAdmissionPolicyBinding MimeYaml


-- *** deleteCollectionMutatingAdmissionPolicy

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies@
-- 
-- delete collection of MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteCollectionMutatingAdmissionPolicy
  :: (Consumes DeleteCollectionMutatingAdmissionPolicy contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest DeleteCollectionMutatingAdmissionPolicy contentType V1Status accept
deleteCollectionMutatingAdmissionPolicy _  _ =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteCollectionMutatingAdmissionPolicy 
instance HasBodyParam DeleteCollectionMutatingAdmissionPolicy V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy Continue where
  applyOptionalParam req (Continue xs) =
    req `addQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `addQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `addQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "ignoreStoreReadErrorWithClusterBreakingPotential" - if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy IgnoreStoreReadErrorWithClusterBreakingPotential where
  applyOptionalParam req (IgnoreStoreReadErrorWithClusterBreakingPotential xs) =
    req `addQuery` toQuery ("ignoreStoreReadErrorWithClusterBreakingPotential", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `addQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `addQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `addQuery` toQuery ("propagationPolicy", Just xs)

-- | /Optional Param/ "resourceVersion" - resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `addQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "resourceVersionMatch" - resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy ResourceVersionMatch where
  applyOptionalParam req (ResourceVersionMatch xs) =
    req `addQuery` toQuery ("resourceVersionMatch", Just xs)

-- | /Optional Param/ "sendInitialEvents" - `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan   is interpreted as \"data at least as new as the provided `resourceVersion`\"   and the bookmark event is send when the state is synced   to a `resourceVersion` at least as fresh as the one provided by the ListOptions.   If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - `resourceVersionMatch` set to any other value or unset   Invalid error is returned.  Defaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy SendInitialEvents where
  applyOptionalParam req (SendInitialEvents xs) =
    req `addQuery` toQuery ("sendInitialEvents", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicy TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `addQuery` toQuery ("timeoutSeconds", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes DeleteCollectionMutatingAdmissionPolicy mtype

-- | @application/json@
instance Produces DeleteCollectionMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteCollectionMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces DeleteCollectionMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces DeleteCollectionMutatingAdmissionPolicy MimeYaml


-- *** deleteCollectionMutatingAdmissionPolicyBinding

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings@
-- 
-- delete collection of MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteCollectionMutatingAdmissionPolicyBinding
  :: (Consumes DeleteCollectionMutatingAdmissionPolicyBinding contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest DeleteCollectionMutatingAdmissionPolicyBinding contentType V1Status accept
deleteCollectionMutatingAdmissionPolicyBinding _  _ =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteCollectionMutatingAdmissionPolicyBinding 
instance HasBodyParam DeleteCollectionMutatingAdmissionPolicyBinding V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding Continue where
  applyOptionalParam req (Continue xs) =
    req `addQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `addQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `addQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "ignoreStoreReadErrorWithClusterBreakingPotential" - if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding IgnoreStoreReadErrorWithClusterBreakingPotential where
  applyOptionalParam req (IgnoreStoreReadErrorWithClusterBreakingPotential xs) =
    req `addQuery` toQuery ("ignoreStoreReadErrorWithClusterBreakingPotential", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `addQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `addQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `addQuery` toQuery ("propagationPolicy", Just xs)

-- | /Optional Param/ "resourceVersion" - resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `addQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "resourceVersionMatch" - resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding ResourceVersionMatch where
  applyOptionalParam req (ResourceVersionMatch xs) =
    req `addQuery` toQuery ("resourceVersionMatch", Just xs)

-- | /Optional Param/ "sendInitialEvents" - `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan   is interpreted as \"data at least as new as the provided `resourceVersion`\"   and the bookmark event is send when the state is synced   to a `resourceVersion` at least as fresh as the one provided by the ListOptions.   If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - `resourceVersionMatch` set to any other value or unset   Invalid error is returned.  Defaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding SendInitialEvents where
  applyOptionalParam req (SendInitialEvents xs) =
    req `addQuery` toQuery ("sendInitialEvents", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam DeleteCollectionMutatingAdmissionPolicyBinding TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `addQuery` toQuery ("timeoutSeconds", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes DeleteCollectionMutatingAdmissionPolicyBinding mtype

-- | @application/json@
instance Produces DeleteCollectionMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteCollectionMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces DeleteCollectionMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces DeleteCollectionMutatingAdmissionPolicyBinding MimeYaml


-- *** deleteMutatingAdmissionPolicy

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies\/{name}@
-- 
-- delete a MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteMutatingAdmissionPolicy
  :: (Consumes DeleteMutatingAdmissionPolicy contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicy
  -> KubernetesRequest DeleteMutatingAdmissionPolicy contentType V1Status accept
deleteMutatingAdmissionPolicy _  _ (Name name) =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteMutatingAdmissionPolicy 
instance HasBodyParam DeleteMutatingAdmissionPolicy V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam DeleteMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteMutatingAdmissionPolicy DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteMutatingAdmissionPolicy GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `addQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "ignoreStoreReadErrorWithClusterBreakingPotential" - if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
instance HasOptionalParam DeleteMutatingAdmissionPolicy IgnoreStoreReadErrorWithClusterBreakingPotential where
  applyOptionalParam req (IgnoreStoreReadErrorWithClusterBreakingPotential xs) =
    req `addQuery` toQuery ("ignoreStoreReadErrorWithClusterBreakingPotential", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteMutatingAdmissionPolicy OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `addQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteMutatingAdmissionPolicy PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `addQuery` toQuery ("propagationPolicy", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes DeleteMutatingAdmissionPolicy mtype

-- | @application/json@
instance Produces DeleteMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces DeleteMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces DeleteMutatingAdmissionPolicy MimeYaml


-- *** deleteMutatingAdmissionPolicyBinding

-- | @DELETE \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings\/{name}@
-- 
-- delete a MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
deleteMutatingAdmissionPolicyBinding
  :: (Consumes DeleteMutatingAdmissionPolicyBinding contentType)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicyBinding
  -> KubernetesRequest DeleteMutatingAdmissionPolicyBinding contentType V1Status accept
deleteMutatingAdmissionPolicyBinding _  _ (Name name) =
  _mkRequest "DELETE" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data DeleteMutatingAdmissionPolicyBinding 
instance HasBodyParam DeleteMutatingAdmissionPolicyBinding V1DeleteOptions 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "gracePeriodSeconds" - The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding GracePeriodSeconds where
  applyOptionalParam req (GracePeriodSeconds xs) =
    req `addQuery` toQuery ("gracePeriodSeconds", Just xs)

-- | /Optional Param/ "ignoreStoreReadErrorWithClusterBreakingPotential" - if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding IgnoreStoreReadErrorWithClusterBreakingPotential where
  applyOptionalParam req (IgnoreStoreReadErrorWithClusterBreakingPotential xs) =
    req `addQuery` toQuery ("ignoreStoreReadErrorWithClusterBreakingPotential", Just xs)

-- | /Optional Param/ "orphanDependents" - Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding OrphanDependents where
  applyOptionalParam req (OrphanDependents xs) =
    req `addQuery` toQuery ("orphanDependents", Just xs)

-- | /Optional Param/ "propagationPolicy" - Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
instance HasOptionalParam DeleteMutatingAdmissionPolicyBinding PropagationPolicy where
  applyOptionalParam req (PropagationPolicy xs) =
    req `addQuery` toQuery ("propagationPolicy", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes DeleteMutatingAdmissionPolicyBinding mtype

-- | @application/json@
instance Produces DeleteMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces DeleteMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces DeleteMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces DeleteMutatingAdmissionPolicyBinding MimeYaml


-- *** getAPIResources

-- | @GET \/apis\/admissionregistration.k8s.io\/v1alpha1\/@
-- 
-- get available resources
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
getAPIResources
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest GetAPIResources MimeNoContent V1APIResourceList accept
getAPIResources  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1alpha1/"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data GetAPIResources  
-- | @application/json@
instance Produces GetAPIResources MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces GetAPIResources MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces GetAPIResources MimeCbor
-- | @application/yaml@
instance Produces GetAPIResources MimeYaml


-- *** listMutatingAdmissionPolicy

-- | @GET \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies@
-- 
-- list or watch objects of kind MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listMutatingAdmissionPolicy
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest ListMutatingAdmissionPolicy MimeNoContent V1alpha1MutatingAdmissionPolicyList accept
listMutatingAdmissionPolicy  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListMutatingAdmissionPolicy  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ListMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
instance HasOptionalParam ListMutatingAdmissionPolicy AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `addQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListMutatingAdmissionPolicy Continue where
  applyOptionalParam req (Continue xs) =
    req `addQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListMutatingAdmissionPolicy FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `addQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListMutatingAdmissionPolicy LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `addQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListMutatingAdmissionPolicy Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "resourceVersion" - resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam ListMutatingAdmissionPolicy ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `addQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "resourceVersionMatch" - resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam ListMutatingAdmissionPolicy ResourceVersionMatch where
  applyOptionalParam req (ResourceVersionMatch xs) =
    req `addQuery` toQuery ("resourceVersionMatch", Just xs)

-- | /Optional Param/ "sendInitialEvents" - `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan   is interpreted as \"data at least as new as the provided `resourceVersion`\"   and the bookmark event is send when the state is synced   to a `resourceVersion` at least as fresh as the one provided by the ListOptions.   If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - `resourceVersionMatch` set to any other value or unset   Invalid error is returned.  Defaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.
instance HasOptionalParam ListMutatingAdmissionPolicy SendInitialEvents where
  applyOptionalParam req (SendInitialEvents xs) =
    req `addQuery` toQuery ("sendInitialEvents", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListMutatingAdmissionPolicy TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `addQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListMutatingAdmissionPolicy Watch where
  applyOptionalParam req (Watch xs) =
    req `addQuery` toQuery ("watch", Just xs)
-- | @application/cbor-seq@
instance Produces ListMutatingAdmissionPolicy MimeCborSeq
-- | @application/json@
instance Produces ListMutatingAdmissionPolicy MimeJSON
-- | @application/json;stream=watch@
instance Produces ListMutatingAdmissionPolicy MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListMutatingAdmissionPolicy MimeVndKubernetesProtobufstreamwatch
-- | @application/cbor@
instance Produces ListMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces ListMutatingAdmissionPolicy MimeYaml


-- *** listMutatingAdmissionPolicyBinding

-- | @GET \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings@
-- 
-- list or watch objects of kind MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
listMutatingAdmissionPolicyBinding
  :: Accept accept -- ^ request accept ('MimeType')
  -> KubernetesRequest ListMutatingAdmissionPolicyBinding MimeNoContent V1alpha1MutatingAdmissionPolicyBindingList accept
listMutatingAdmissionPolicyBinding  _ =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ListMutatingAdmissionPolicyBinding  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ListMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "allowWatchBookmarks" - allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding AllowWatchBookmarks where
  applyOptionalParam req (AllowWatchBookmarks xs) =
    req `addQuery` toQuery ("allowWatchBookmarks", Just xs)

-- | /Optional Param/ "continue" - The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".  This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding Continue where
  applyOptionalParam req (Continue xs) =
    req `addQuery` toQuery ("continue", Just xs)

-- | /Optional Param/ "fieldSelector" - A selector to restrict the list of returned objects by their fields. Defaults to everything.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding FieldSelector where
  applyOptionalParam req (FieldSelector xs) =
    req `addQuery` toQuery ("fieldSelector", Just xs)

-- | /Optional Param/ "labelSelector" - A selector to restrict the list of returned objects by their labels. Defaults to everything.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding LabelSelector where
  applyOptionalParam req (LabelSelector xs) =
    req `addQuery` toQuery ("labelSelector", Just xs)

-- | /Optional Param/ "limit" - limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.  The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)

-- | /Optional Param/ "resourceVersion" - resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam ListMutatingAdmissionPolicyBinding ResourceVersion where
  applyOptionalParam req (ResourceVersion xs) =
    req `addQuery` toQuery ("resourceVersion", Just xs)

-- | /Optional Param/ "resourceVersionMatch" - resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.  Defaults to unset
instance HasOptionalParam ListMutatingAdmissionPolicyBinding ResourceVersionMatch where
  applyOptionalParam req (ResourceVersionMatch xs) =
    req `addQuery` toQuery ("resourceVersionMatch", Just xs)

-- | /Optional Param/ "sendInitialEvents" - `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.  When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan   is interpreted as \"data at least as new as the provided `resourceVersion`\"   and the bookmark event is send when the state is synced   to a `resourceVersion` at least as fresh as the one provided by the ListOptions.   If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the   bookmark event is send when the state is synced at least to the moment   when request started being processed. - `resourceVersionMatch` set to any other value or unset   Invalid error is returned.  Defaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding SendInitialEvents where
  applyOptionalParam req (SendInitialEvents xs) =
    req `addQuery` toQuery ("sendInitialEvents", Just xs)

-- | /Optional Param/ "timeoutSeconds" - Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding TimeoutSeconds where
  applyOptionalParam req (TimeoutSeconds xs) =
    req `addQuery` toQuery ("timeoutSeconds", Just xs)

-- | /Optional Param/ "watch" - Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
instance HasOptionalParam ListMutatingAdmissionPolicyBinding Watch where
  applyOptionalParam req (Watch xs) =
    req `addQuery` toQuery ("watch", Just xs)
-- | @application/cbor-seq@
instance Produces ListMutatingAdmissionPolicyBinding MimeCborSeq
-- | @application/json@
instance Produces ListMutatingAdmissionPolicyBinding MimeJSON
-- | @application/json;stream=watch@
instance Produces ListMutatingAdmissionPolicyBinding MimeJsonstreamwatch
-- | @application/vnd.kubernetes.protobuf@
instance Produces ListMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/vnd.kubernetes.protobuf;stream=watch@
instance Produces ListMutatingAdmissionPolicyBinding MimeVndKubernetesProtobufstreamwatch
-- | @application/cbor@
instance Produces ListMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces ListMutatingAdmissionPolicyBinding MimeYaml


-- *** patchMutatingAdmissionPolicy

-- | @PATCH \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies\/{name}@
-- 
-- partially update the specified MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchMutatingAdmissionPolicy
  :: (Consumes PatchMutatingAdmissionPolicy contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicy
  -> KubernetesRequest PatchMutatingAdmissionPolicy contentType V1alpha1MutatingAdmissionPolicy accept
patchMutatingAdmissionPolicy _  _ body (Name name) =
  _mkRequest "PATCH" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchMutatingAdmissionPolicy 
instance HasBodyParam PatchMutatingAdmissionPolicy Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam PatchMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchMutatingAdmissionPolicy DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchMutatingAdmissionPolicy FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam PatchMutatingAdmissionPolicy FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchMutatingAdmissionPolicy Force where
  applyOptionalParam req (Force xs) =
    req `addQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchMutatingAdmissionPolicy MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchMutatingAdmissionPolicy MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchMutatingAdmissionPolicy MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchMutatingAdmissionPolicy MimeStrategicMergePatchjson
-- | @application/apply-patch+cbor@
instance Consumes PatchMutatingAdmissionPolicy MimeApplyPatchcbor

-- | @application/json@
instance Produces PatchMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces PatchMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces PatchMutatingAdmissionPolicy MimeYaml


-- *** patchMutatingAdmissionPolicyBinding

-- | @PATCH \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings\/{name}@
-- 
-- partially update the specified MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
patchMutatingAdmissionPolicyBinding
  :: (Consumes PatchMutatingAdmissionPolicyBinding contentType, MimeRender contentType Body)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> Body -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicyBinding
  -> KubernetesRequest PatchMutatingAdmissionPolicyBinding contentType V1alpha1MutatingAdmissionPolicyBinding accept
patchMutatingAdmissionPolicyBinding _  _ body (Name name) =
  _mkRequest "PATCH" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data PatchMutatingAdmissionPolicyBinding 
instance HasBodyParam PatchMutatingAdmissionPolicyBinding Body 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam PatchMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam PatchMutatingAdmissionPolicyBinding DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
instance HasOptionalParam PatchMutatingAdmissionPolicyBinding FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam PatchMutatingAdmissionPolicyBinding FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | /Optional Param/ "force" - Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
instance HasOptionalParam PatchMutatingAdmissionPolicyBinding Force where
  applyOptionalParam req (Force xs) =
    req `addQuery` toQuery ("force", Just xs)

-- | @application/apply-patch+yaml@
instance Consumes PatchMutatingAdmissionPolicyBinding MimeApplyPatchyaml
-- | @application/json-patch+json@
instance Consumes PatchMutatingAdmissionPolicyBinding MimeJsonPatchjson
-- | @application/merge-patch+json@
instance Consumes PatchMutatingAdmissionPolicyBinding MimeMergePatchjson
-- | @application/strategic-merge-patch+json@
instance Consumes PatchMutatingAdmissionPolicyBinding MimeStrategicMergePatchjson
-- | @application/apply-patch+cbor@
instance Consumes PatchMutatingAdmissionPolicyBinding MimeApplyPatchcbor

-- | @application/json@
instance Produces PatchMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces PatchMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces PatchMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces PatchMutatingAdmissionPolicyBinding MimeYaml


-- *** readMutatingAdmissionPolicy

-- | @GET \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies\/{name}@
-- 
-- read the specified MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readMutatingAdmissionPolicy
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicy
  -> KubernetesRequest ReadMutatingAdmissionPolicy MimeNoContent V1alpha1MutatingAdmissionPolicy accept
readMutatingAdmissionPolicy  _ (Name name) =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadMutatingAdmissionPolicy  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ReadMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)
-- | @application/json@
instance Produces ReadMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces ReadMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces ReadMutatingAdmissionPolicy MimeYaml


-- *** readMutatingAdmissionPolicyBinding

-- | @GET \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings\/{name}@
-- 
-- read the specified MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
readMutatingAdmissionPolicyBinding
  :: Accept accept -- ^ request accept ('MimeType')
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicyBinding
  -> KubernetesRequest ReadMutatingAdmissionPolicyBinding MimeNoContent V1alpha1MutatingAdmissionPolicyBinding accept
readMutatingAdmissionPolicyBinding  _ (Name name) =
  _mkRequest "GET" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)

data ReadMutatingAdmissionPolicyBinding  

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ReadMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)
-- | @application/json@
instance Produces ReadMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReadMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces ReadMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces ReadMutatingAdmissionPolicyBinding MimeYaml


-- *** replaceMutatingAdmissionPolicy

-- | @PUT \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicies\/{name}@
-- 
-- replace the specified MutatingAdmissionPolicy
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceMutatingAdmissionPolicy
  :: (Consumes ReplaceMutatingAdmissionPolicy contentType, MimeRender contentType V1alpha1MutatingAdmissionPolicy)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1alpha1MutatingAdmissionPolicy -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicy
  -> KubernetesRequest ReplaceMutatingAdmissionPolicy contentType V1alpha1MutatingAdmissionPolicy accept
replaceMutatingAdmissionPolicy _  _ body (Name name) =
  _mkRequest "PUT" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicies/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceMutatingAdmissionPolicy 
instance HasBodyParam ReplaceMutatingAdmissionPolicy V1alpha1MutatingAdmissionPolicy 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ReplaceMutatingAdmissionPolicy Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceMutatingAdmissionPolicy DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceMutatingAdmissionPolicy FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam ReplaceMutatingAdmissionPolicy FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes ReplaceMutatingAdmissionPolicy mtype

-- | @application/json@
instance Produces ReplaceMutatingAdmissionPolicy MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceMutatingAdmissionPolicy MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces ReplaceMutatingAdmissionPolicy MimeCbor
-- | @application/yaml@
instance Produces ReplaceMutatingAdmissionPolicy MimeYaml


-- *** replaceMutatingAdmissionPolicyBinding

-- | @PUT \/apis\/admissionregistration.k8s.io\/v1alpha1\/mutatingadmissionpolicybindings\/{name}@
-- 
-- replace the specified MutatingAdmissionPolicyBinding
-- 
-- AuthMethod: 'AuthApiKeyBearerToken'
-- 
replaceMutatingAdmissionPolicyBinding
  :: (Consumes ReplaceMutatingAdmissionPolicyBinding contentType, MimeRender contentType V1alpha1MutatingAdmissionPolicyBinding)
  => ContentType contentType -- ^ request content-type ('MimeType')
  -> Accept accept -- ^ request accept ('MimeType')
  -> V1alpha1MutatingAdmissionPolicyBinding -- ^ "body"
  -> Name -- ^ "name" -  name of the MutatingAdmissionPolicyBinding
  -> KubernetesRequest ReplaceMutatingAdmissionPolicyBinding contentType V1alpha1MutatingAdmissionPolicyBinding accept
replaceMutatingAdmissionPolicyBinding _  _ body (Name name) =
  _mkRequest "PUT" ["/apis/admissionregistration.k8s.io/v1alpha1/mutatingadmissionpolicybindings/",toPath name]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyBearerToken)
    `setBodyParam` body

data ReplaceMutatingAdmissionPolicyBinding 
instance HasBodyParam ReplaceMutatingAdmissionPolicyBinding V1alpha1MutatingAdmissionPolicyBinding 

-- | /Optional Param/ "pretty" - If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
instance HasOptionalParam ReplaceMutatingAdmissionPolicyBinding Pretty where
  applyOptionalParam req (Pretty xs) =
    req `addQuery` toQuery ("pretty", Just xs)

-- | /Optional Param/ "dryRun" - When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
instance HasOptionalParam ReplaceMutatingAdmissionPolicyBinding DryRun where
  applyOptionalParam req (DryRun xs) =
    req `addQuery` toQuery ("dryRun", Just xs)

-- | /Optional Param/ "fieldManager" - fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
instance HasOptionalParam ReplaceMutatingAdmissionPolicyBinding FieldManager where
  applyOptionalParam req (FieldManager xs) =
    req `addQuery` toQuery ("fieldManager", Just xs)

-- | /Optional Param/ "fieldValidation" - fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.
instance HasOptionalParam ReplaceMutatingAdmissionPolicyBinding FieldValidation where
  applyOptionalParam req (FieldValidation xs) =
    req `addQuery` toQuery ("fieldValidation", Just xs)

-- | @*/*@
instance MimeType mtype => Consumes ReplaceMutatingAdmissionPolicyBinding mtype

-- | @application/json@
instance Produces ReplaceMutatingAdmissionPolicyBinding MimeJSON
-- | @application/vnd.kubernetes.protobuf@
instance Produces ReplaceMutatingAdmissionPolicyBinding MimeVndKubernetesProtobuf
-- | @application/cbor@
instance Produces ReplaceMutatingAdmissionPolicyBinding MimeCbor
-- | @application/yaml@
instance Produces ReplaceMutatingAdmissionPolicyBinding MimeYaml

